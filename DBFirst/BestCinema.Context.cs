//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBFirst
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BestBioEntities2 : DbContext
    {
        public BestBioEntities2()
            : base("name=BestBioEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Movy> Movies { get; set; }
        public virtual DbSet<Reservation> Reservations { get; set; }
        public virtual DbSet<Seat> Seats { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<Get_User_Result> Get_User(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_User_Result>("Get_User", emailParameter);
        }
    
        public virtual ObjectResult<Get_User_Data_Result> Get_User_Data(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_User_Data_Result>("Get_User_Data", emailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetRerservedSeats(Nullable<int> movieID, Nullable<System.DateTime> date)
        {
            var movieIDParameter = movieID.HasValue ?
                new ObjectParameter("MovieID", movieID) :
                new ObjectParameter("MovieID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetRerservedSeats", movieIDParameter, dateParameter);
        }
    
        public virtual int Insert_User(string name, string address, string email, string phoneNumber, byte[] passwordHash, byte[] passwordSalt)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(byte[]));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_User", nameParameter, addressParameter, emailParameter, phoneNumberParameter, passwordHashParameter, passwordSaltParameter);
        }
    
        public virtual int RemoveUser(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveUser", emailParameter);
        }
    
        public virtual int Reserve(Nullable<int> movieID, Nullable<int> seatID, Nullable<System.DateTime> date, string email)
        {
            var movieIDParameter = movieID.HasValue ?
                new ObjectParameter("MovieID", movieID) :
                new ObjectParameter("MovieID", typeof(int));
    
            var seatIDParameter = seatID.HasValue ?
                new ObjectParameter("SeatID", seatID) :
                new ObjectParameter("SeatID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reserve", movieIDParameter, seatIDParameter, dateParameter, emailParameter);
        }
    
        public virtual int UpdateUser(string email, string address, string phoneNumber, string name, byte[] passwordHash, byte[] passwordSalt)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(byte[]));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", emailParameter, addressParameter, phoneNumberParameter, nameParameter, passwordHashParameter, passwordSaltParameter);
        }
    }
}
